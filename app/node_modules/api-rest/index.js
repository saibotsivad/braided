import { handleRequest } from './handle-request.js'
import { formatError } from './format-error.js'

const work = async (event) => {
	const start = new Date().getTime()
	try {
		let { body, status, headers } = await handleRequest(event.request)
		headers = headers || {}
		headers['braidedjs-ms'] = (new Date().getTime() - start).toString()
		if (body) {
			headers['content-type'] = 'application/json'
			body = JSON.stringify(body)
		}
		return new Response(body, { headers, status })
	} catch (error) {
		return new Response(JSON.stringify({
			errors: [ formatError(error) ]
		}), {
			status: 500,
			headers: { 'content-type': 'application/json' }
		})
	}
}

addEventListener('fetch', event => event.respondWith(work(event)))
