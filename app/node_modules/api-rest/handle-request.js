import Trouter from 'trouter'
import { parseUrl } from 'shared/parse-url.js'
import { route as accountIdRoute } from 'api-rest/route/[accountId].js'
import { route as accountIdCollectionNameRoute } from 'api-rest/route/[accountId]/[collectionName].js'
import { route as accountIdCollectionNameShardIdRoute } from 'api-rest/route/[accountId]/[collectionName]/[shardId].js'

const router = new Trouter()

const addRoute = ({ path, methods }) => {
	for (const method in methods) {
		router.add(method, path, methods[method])
	}
}

addRoute(accountIdRoute)
addRoute(accountIdCollectionNameRoute)
addRoute(accountIdCollectionNameShardIdRoute)

export async function handleRequest(request, service) {
	const url = parseUrl(request.url)

	const { params, handlers } = router.find(request.method, url.pathname)

	if (handlers.length) {
		params.originalUrl = url.origin + url.pathname
		params.lastUpdated = parseInt(url.query.lastUpdated, 10) || 0
		return handlers[0](request, params, service)
	}

	return {
		body: '<p>not found</p>',
		headers: {
			'content-type': 'text/html;charset=UTF-8'
		}
	}
}
