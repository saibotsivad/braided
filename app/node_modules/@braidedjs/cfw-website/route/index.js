import markdown from './index.md'
import html from 'www-root/template/page.html'
import mustache from 'mustache/mustache.mjs'

/*

what would be cooler (and I don't know where to put the files exactly)
would be something that looks at a KV value to grab
actual HTML string chunks (some other process would turn
markdown into HTML) and then you'd do a KV lookup based
on the route path

you'd still want the html templates, although you could
also put those in KV so you might have

const { content, template, metadata } = CONTENT.get('markdown from route')
const html = TEMPLATE.get(template)
const body = mustache.render(html, { content, ...metadata })

*/

export const route = {
	path: '/',
	methods: {
		GET: async (request, params, service) => {
			return {
				body: mustache.render(html, {
					content: markdown,
					title: 'BraidedJS Demo'
				}),
				headers: {
					'Content-Type': 'text/html'
				},
				status: 200
			}
		}
	}
}
