// This is meant to follow these specs:
// https://github.com/saibotsivad/json-api-websockets
// the specs need some polishing up
// and this could be released as an implementation of the specs
// parsing the message, anyway

const ALLOWED_SUBSCRIBERS = [ 'DELETE', 'DIFF', 'FULL', 'PING' ]

const validateCommand = {
	SUB: message => message.length === 3
		&& message[2].every(chunk => Array.isArray(chunk)
			&& chunk.length === 2
			&& typeof chunk[0] === 'string'
			&& ALLOWED_SUBSCRIBERS.includes(chunk[1])
		),
	UNSUB: message => message.length === 3
		&& message[2].every(chunk => typeof chunk === 'string'),
	LIST: message => message.length === 2
}

export const parseMessage = string => {
	try {
		const message = JSON.parse(string)
		const valid = Array.isArray(message)
			&& (message.length === 2 || message.length === 3)
			&& typeof message[0] === 'string'
			&& validateCommand[message[1]]
			&& validateCommand[message[1]](message)
		if (valid) {
			const list = message[1] === 'UNSUBSCRIBE'
				? message[2]
				: message[2].map(chunk => ({ path: chunk[0], type: chunk[1] }))
			return {
				id: message[0],
				type: message[1],
				list
			}
		}
	} catch (ignore) {
	}
	return false
}
