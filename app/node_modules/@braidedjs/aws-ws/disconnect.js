import { log } from 'shared/log.js'
import DynamoDB from 'aws-sdk/clients/dynamodb'

const db = new DynamoDB()
const TableName = process.env.TABLE_NAME

const handler = async (event, context) => {
	const { apiId, connectionId, authorizer: { principalId: userId } } = event.requestContext

	const { Items, ...queryResults } = await db.query({
		TableName,
		IndexName: 'gid-lookup',
		ExpressionAttributeValues: {
			':gid': {
				S: `ws:${userId}:conn:${connectionId}`
			}
		},
		KeyConditionExpression: 'gid = :gid',
		ProjectionExpression: 'pk,sk',
		ReturnConsumedCapacity: 'TOTAL'
	}).promise()

	const keys = Items.map(item => ({
		pk: item.pk,
		sk: item.sk
	}))

	const deleteResults = Items.length && await db.batchWriteItem({
		RequestItems: {
			[TableName]: keys.map(Key => ({
				DeleteRequest: { Key }
			}))
		},
		ReturnConsumedCapacity: 'TOTAL',
		ReturnItemCollectionMetrics: 'SIZE'
	}).promise()

	log.info('disconnect', { queryResults, keys, deleteResults })
	return { statusCode: 200 }
}

export default { handler }
